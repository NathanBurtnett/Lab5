
Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
    1    1                      ;**************************************************************************************
    2    2                      ;* Blank Project Main [includes LibV2.2]                                              *
    3    3                      ;**************************************************************************************
    4    4                      ;* Summary:                                                                           *
    5    5                      ;*   -                                                                                *
    6    6                      ;*                                                                                    *
    7    7                      ;* Author: YOUR NAME                                                                  *
    8    8                      ;*   Cal Poly University                                                              *
    9    9                      ;*   Spring 2022                                                                      *
   10   10                      ;*                                                                                    *
   11   11                      ;* Revision History:                                                                  *
   12   12                      ;*   -                                                                                *
   13   13                      ;*                                                                                    *
   14   14                      ;* ToDo:                                                                              *
   15   15                      ;*   -                                                                                *
   16   16                      ;**************************************************************************************
   17   17                      
   18   18                      ;/------------------------------------------------------------------------------------\
   19   19                      ;| Include all associated files                                                       |
   20   20                      ;\------------------------------------------------------------------------------------/
   21   21                      ; The following are external files to be included during assembly
   22   22                                    XDEF  main
   23   23                                    XDEF  Theta_OLD, RUN, CL, V_ref, KP, KI, UPDATE_FLG1  
   24   24                      ;/------------------------------------------------------------------------------------\
   25   25                      ;| External References                                                                |
   26   26                      ;\------------------------------------------------------------------------------------/
   27   27                      ; All labels from other files must have an external reference
   28   28                      
   29   29                                    XREF  ENABLE_MOTOR, DISABLE_MOTOR
   30   30                                    XREF  STARTUP_MOTOR, UPDATE_MOTOR, CURRENT_MOTOR 
   31   31                                    XREF  STARTUP_PWM, STARTUP_ATD0, STARTUP_ATD1   
   32   32                                    XREF  OUTDACA, OUTDACB
   33   33                                    XREF  STARTUP_ENCODER, READ_ENCODER
   34   34                                    XREF  DELAY_MILLI, DELAY_MICRO
   35   35                                    XREF  INITLCD, SETADDR, GETADDR, CURSOR_ON, DISP_OFF
   36   36                                    XREF  OUTCHAR, OUTCHAR_AT, OUTSTRING, OUTSTRING_AT
   37   37                                    XREF  INITKEY, LKEY_FLG, GETCHAR
   38   38                                    XREF  LCDTEMPLATE, UPDATELCD_L1, UPDATELCD_L2
   39   39                                    XREF  LVREF_BUF, LVACT_BUF, LERR_BUF,LEFF_BUF, LKP_BUF, LKI_BUF
   40   40                                    XREF  Entry, ISR_KEYPAD
   41   41                                  
   42   42                                    XREF  V_act_DISP, ERR_DISP, EFF_DISP
   43   43                                    XREF  FREDENTRY
   44   44                                  
   45   45                      ;/------------------------------------------------------------------------------------\
   46   46                      ;| Assembler Equates                                                                  |
   47   47                      ;\------------------------------------------------------------------------------------/
   48   48                      ; Constant values can be equated here
   49   49                      
   50   50          0000 004E   TFLG1         EQU   $004E
   51   51          0000 0050   TC0           EQU   $0050
   52   52          0000 0001   C0F           EQU   %00000001          ; timer channel 0 output compare bit
   53   53          0000 0240   PORTT         EQU   $0240              ; PORTT pin 8 to be used for interrupt timing
   54   54          FFFF FD8F   LOWER_LIM     EQU   -625               ; number for max reverse duty cycle
   55   55          0000 0271   UPPER_LIM     EQU   625                ; number for max forward duty cycle
   56   56                      
   57   57                      ;/------------------------------------------------------------------------------------\
   58   58                      ;| Variables in RAM                                                                   |
   59   59                      ;\------------------------------------------------------------------------------------/
   60   60                      ; The following variables are located in unpaged ram
   61   61                      
   62   62                      DEFAULT_RAM:  SECTION
   63   63                      
   64   64   000000             RUN:          DS.B  1                  ; Boolean indicating controller is running

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
   65   65   000001             CL:           DS.B  1                  ; Boolean for closed-loop active
   66   66                      
   67   67   000002             V_act:        DS.W  1
   68   68   000004             V_ref:        DS.W  1                  ; reference velocity
   69   69   000006             Theta_OLD:    DS.W  1                  ; previous encoder reading
   70   70   000008             Theta_NEW:    DS.W  1                  ;
   71   71   00000A             ENCODER_COUNT: DS.W  1                  ; encoder cound
   72   72   00000C             KP:           DS.W  1                  ; proportional gain
   73   73   00000E             KPRES:        DS.W  1                  ; proportional gain result
   74   74   000010             KI:           DS.W  1                  ; integral gain
   75   75   000012             KIRES:        DS.W  1                  ; intergral gain result
   76   76                      
   77   77   000014             APRE          DS.W  1                  ; pi controller output
   78   78   000016             ASTAR         DS.W  1                  ; saturation checked pi controller output
   79   79                      
   80   80   000018             ERROR:        DS.W  1                  ; the current error of the system
   81   81   00001A             ESUM:         DS.W  1                  ; reiman sum of errors
   82   82                      
   83   83   00001C             EFF:          DS.W  1                  ; current effort of motor
   84   84                      
   85   85   00001E             ERR:          DS.W  1
   86   86   000020             TEMP:         DS.W  1
   87   87   000022             UPDATE_COUNT: DS.W  1
   88   88                      
   89   89                      
   90   90                      
   91   91   000024             UPDATE_FLG1   DS.B  1                  ; Boolean for display update for line one
   92   92                      
   93   93                      
   94   94                      ;/------------------------------------------------------------------------------------\
   95   95                      ;|  Main Program Code                                                                 |
   96   96                      ;\------------------------------------------------------------------------------------/
   97   97                      ; Your code goes here
   98   98                      
   99   99                      MyCode:       SECTION
  100  100                      main:   
  101  101                      ;CLEAR VARIABLES 
  102  102   000000 1879 xxxx       clrw LVREF_BUF
  103  103   000004 1879 xxxx       clrw LVACT_BUF
  104  104   000008 1879 xxxx       clrw LVACT_BUF
  105  105                      
  106  106   00000C 79xx xx         clr RUN
  107  107   00000F 79xx xx         clr CL
  108  108                      
  109  109   000012 1879 xxxx       clrw V_act
  110  110   000016 1879 xxxx       clrw V_ref
  111  111   00001A 1879 xxxx       clrw Theta_NEW
  112  112   00001E 1879 xxxx       clrw Theta_OLD
  113  113   000022 1879 xxxx       clrw ENCODER_COUNT
  114  114   000026 1879 xxxx       clrw KP 
  115  115   00002A 1879 xxxx       clrw KPRES
  116  116   00002E 1879 xxxx       clrw KI 
  117  117   000032 1879 xxxx       clrw KPRES
  118  118                      
  119  119   000036 1879 xxxx       clrw ESUM
  120  120   00003A 1879 xxxx       clrw ERROR
  121  121   00003E 1879 xxxx       clrw APRE
  122  122   000042 1879 xxxx       clrw ASTAR
  123  123                          
  124  124                      
  125  125                      
  126  126   000046 1879 xxxx       clrw EFF
  127  127   00004A 79xx xx         clr UPDATE_FLG1
  128  128   00004D 1879 xxxx       clrw UPDATE_COUNT

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
  129  129                      
  130  130                          ;SETUP INSTRUCTIONS
  131  131   000051 16xx xx         jsr STARTUP_ENCODER   ;initialize encoder
  132  132   000054 16xx xx         jsr READ_ENCODER      ;returns encoder count in D
  133  133   000057 7Cxx xx         std ENCODER_COUNT     ;store the count in a 16-bit variable in RAM
  134  134                      
  135  135   00005A 16xx xx         jsr STARTUP_PWM       ;initialize PWM module
  136  136   00005D 16xx xx         jsr STARTUP_MOTOR     ;initialize motor in disabled state
  137  137                      
  138  138   000060 16xx xx         jsr ENABLE_MOTOR      ;enable motor operation
  139  139                      
  140  140   000063 16xx xx         jsr INITLCD
  141  141   000066 16xx xx         jsr LCDTEMPLATE       ;initializes the LCD
  142  142   000069 00              bgnd
  143  143                        
  144  144                      
  145  145                        TOP:
  146  146   00006A 16xx xx         jsr TC0ISR
  147  147   00006D 16xx xx         jsr FREDENTRY        
  148  148   000070 20F8            bra TOP
  149  149                      
  150  150                      
  151  151                      
  152  152                      ;||||||||||||||||||||||||||||||||||ISR|||||||||||||||||||||||||||||||||||||||||||||||||
  153  153                      TC0ISR:
  154  154   000072 1C02 4080     bset PORTT, $80           ;turn on PORTT pin 8 to begin ISR timing
  155  155                      
  156  156   000076 72xx xx       inc UPDATE_COUNT          ;unless UPDATE_COUNT = 0, skip saving
  157  157   000079 2617          bne measurements          ; display variables
  158  158   00007B 1804 xxxx     movw V_act, V_act_DISP    ;take a snapshot of variables to enable
             00007F xxxx       
  159  159   000081 1804 xxxx     movw ERR, ERR_DISP        ; consistent display
             000085 xxxx       
  160  160   000087 1804 xxxx     movw EFF, EFF_DISP
             00008B xxxx       
  161  161   00008D 180B 01xx     movb #$01, UPDATE_FLG1    ;set UPDATEFLG1 when appropriate
             000091 xx         
  162  162                      
  163  163                        measurements:
  164  164                          ;read encoder value
  165  165   000092 16xx xx         jsr   READ_ENCODER          ;read encoder position
  166  166   000095 7Cxx xx         std   Theta_NEW             ;store it
  167  167                          ;compute 2-point difference to get speed
  168  168   000098 B3xx xx         subd  Theta_OLD             ;compute displacement since last reading
  169  169   00009B 7Cxx xx         std   V_act                 ;store displacement as actual speed
  170  170   00009E 1804 xxxx       movw  Theta_NEW, Theta_OLD  ;move current raeading to previous reading
             0000A2 xxxx       
  171  171                      
  172  172                      
  173  173                          ;compute the error
  174  174   0000A4 FCxx xx         ldd   V_ref
  175  175   0000A7 B3xx xx         subd  V_act
  176  176   0000AA 7Cxx xx         std   ERROR
  177  177   0000AD FDxx xx         ldy   ESUM
  178  178   0000B0 16xx xx         jsr   DSATADD
  179  179   0000B3 7Cxx xx         std   ESUM
  180  180                          ;compute Ki
  181  181   0000B6 FDxx xx         ldy KI
  182  182   0000B9 13              emul 
  183  183   0000BA CE04 00         ldx #$0400
  184  184   0000BD 1810            idiv 
  185  185   0000BF 7Exx xx         stx KIRES
  186  186                          ;compute Kp
  187  187   0000C2 FCxx xx         ldd ERROR

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
  188  188   0000C5 FDxx xx         ldy KP
  189  189   0000C8 13              emul 
  190  190   0000C9 CE04 00         ldx #$0400
  191  191   0000CC 1810            idiv 
  192  192   0000CE 7Exx xx         stx KPRES
  193  193                          ;add Kp and Ki
  194  194   0000D1 FCxx xx         ldd KPRES
  195  195   0000D4 FDxx xx         ldy KIRES
  196  196   0000D7 16xx xx         jsr DSATADD
  197  197   0000DA 7Cxx xx         std APRE
  198  198                          ;satcheck
  199  199   0000DD 16xx xx         jsr SATCHECK
  200  200   0000E0 7Cxx xx         std ASTAR
  201  201                          ;calculate effort
  202  202   0000E3 CD02 71         ldy #$0271
  203  203   0000E6 13              emul
  204  204   0000E7 CE00 64         ldx #$0064
  205  205   0000EA 1810            idiv
  206  206   0000EC 7Exx xx         stx EFF
  207  207                          ;set motor speed
  208  208   0000EF FCxx xx         ldd ASTAR
  209  209   0000F2 16xx xx         jsr UPDATE_MOTOR
  210  210                          
  211  211                          
  212  212                          
  213  213                        ;CALCULATE VACT
  214  214                          ;VACT = (THETANEW-THETAOLD)/(1BTI)
  215  215                        ;CALCULATE ERROR (VREF-VACT)
  216  216                        ;CALCULATE CONTROLER EFFORT
  217  217                        ;CALCULATE PWM INPUT
  218  218                      
  219  219                      ;/------------------------------------------------------------------------------------\
  220  220                      ;| Subroutines                                                                        |
  221  221                      ;\------------------------------------------------------------------------------------/
  222  222                      SATCHECK:
  223  223   0000F5 34              pshx
  224  224   0000F6 39              pshc
  225  225   0000F7 8C00 00         cpd #$0000
  226  226   0000FA 2B0E            bmi NEGATIVE
  227  227   0000FC 2E02            bgt POSITIVE
  228  228   0000FE 2012            bra SATCHECK_exit
  229  229                          POSITIVE:
  230  230   000100 8C02 71             cpd #$0271
  231  231   000103 2F0D                ble SATCHECK_exit
  232  232   000105 CC02 71             ldd #$0271
  233  233   000108 2008                bra SATCHECK_exit
  234  234                          NEGATIVE:
  235  235   00010A 8CFD 8F             cpd #$FD8F
  236  236   00010D 2C03                bge SATCHECK_exit
  237  237   00010F CCFD 8F             ldd #$FD8F
  238  238                          SATCHECK_exit:
  239  239   000112 38                  pulc 
  240  240   000113 30                  pulx
  241  241   000114 3D                  rts
  242  242                      
  243  243                      DSATADD:
  244  244   000115 34              pshx                ;pushes x to stack
  245  245   000116 39              pshc                ;pushes c to stack
  246  246   000117 7Dxx xx         sty TEMP            ;stores acc y value in TEMP
  247  247   00011A F3xx xx         addd TEMP           ;adds acc D to TEMP
  248  248   00011D 2903            bvs DSATADD_OF    ;if Overflow is set then branch, otherwise just fall to exit
  249  249                        
  250  250                          DSATADD_exit:
  251  251   00011F 38                  pulc                ;puls c from stack

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
  252  252   000120 30                  pulx                ;puls x from stack
  253  253   000121 3D                  rts                 ;end subroutine
  254  254                      
  255  255                          DSATADD_OF:         ;tests overflow
  256  256   000122 8D00 00             cpy #$0000          ;compares TEMP with hex 0
  257  257   000125 2B05                bmi DSATADD_OFN          ;branches if value is negative
  258  258   000127 CC7F FF             ldd #$7FFF          ;loads acc D with positive overflow
  259  259   00012A 20F3                bra DSATADD_exit    ;goes to end subroutine
  260  260                      
  261  261                          DSATADD_OFN:        ;sets negative overflow
  262  262   00012C CC80 00             ldd #$8000          ;loads acc D with negative overflow
  263  263   00012F 20EE                bra DSATADD_exit    ;goes to end subroutine  
  264  264                      
  265  265                      
  266  266                      
  267  267                      ;/------------------------------------------------------------------------------------\
  268  268                      ;| ASCII Messages and Constant Data                                                   |
  269  269                      ;\------------------------------------------------------------------------------------/
  270  270                      ; Any constants can be defined here
  271  271                      
  272  272                      
  273  273                      ;/------------------------------------------------------------------------------------\
  274  274                      ;| Vectors                                                                            |
  275  275                      ;\------------------------------------------------------------------------------------/
  276  276                      ; Add interrupt and reset vectors here
  277  277                               ORG  $FFFE                    ; reset vector address
  278  278  a00FFFE xxxx                 DC.W Entry
  279  279                      
